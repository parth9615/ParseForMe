{
  "name": "buffer-xor",
  "version": "1.0.2",
  "description": "buffer-xor",
  "main": "index.js",
  "scripts": {
    "standard": "standard",
    "test": "npm run-script unit",
    "unit": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/crypto-browserify/buffer-xor.git"
  },
  "bugs": {
    "url": "https://github.com/crypto-browserify/buffer-xor/issues"
  },
  "homepage": "https://github.com/crypto-browserify/buffer-xor",
  "keywords": [
    "bits",
    "bitwise",
    "buffer",
    "buffer-xor",
    "crypto",
    "inline",
    "math",
    "memory",
    "performance",
    "xor"
  ],
  "author": {
    "name": "Daniel Cousens"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "*",
    "standard": "*"
  },
  "readme": "# buffer-xor\n\n[![TRAVIS](https://secure.travis-ci.org/dcousens/buffer-xor.png)](http://travis-ci.org/dcousens/PROJECTNAME)\n[![NPM](http://img.shields.io/npm/v/buffer-xor.svg)](https://www.npmjs.org/package/PROJECTNAME)\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\n\n## Example\n\n``` javascript\nvar xor = require(\"buffer-xor\")\nvar a = new Buffer('00ff0f', 'hex')\nvar b = new Buffer('f0f0', 'hex')\n\nconsole.log(xor(a, b))\n// => <Buffer f0 0f>\n```\n\nOr for those seeking those few extra cycles, perform the operation inline:\n``` javascript\nvar xorInline = require(\"buffer-xor/inline\")\nvar a = new Buffer('00ff0f', 'hex')\nvar b = new Buffer('f0f0', 'hex')\n\nconsole.log(xorInline(a, b))\n// => <Buffer f0 0f>\n\n// See that a has been mutated\nconsole.log(a)\n// => <Buffer f0 0f 0f>\n```\n\n\n## License\n\nThis library is free and open-source software released under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "buffer-xor@1.0.2",
  "_shasum": "231e44571f644bde0789026f61de6e923167124a",
  "_resolved": "https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.2.tgz",
  "_from": "https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.2.tgz"
}
