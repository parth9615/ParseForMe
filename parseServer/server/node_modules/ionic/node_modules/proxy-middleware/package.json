{
  "name": "proxy-middleware",
  "version": "0.7.0",
  "description": "http(s) proxy as connect middleware",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/andrewrk/connect-proxy.git"
  },
  "keywords": [
    "connect",
    "proxy",
    "middleware",
    "https",
    "http",
    "ssl"
  ],
  "author": {
    "name": "Andrew Kelley"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.8.0"
  },
  "devDependencies": {
    "mocha": "~1.21.4",
    "connect": "~3.2.0",
    "serve-static": "~1.6.3"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/andrewrk/connect-proxy.png)](http://travis-ci.org/andrewrk/connect-proxy)\n\n### Usage:\n\n```js\nvar connect = require('connect');\nvar url = require('url');\nvar proxy = require('proxy-middleware');\n\nvar app = connect();\napp.use('/api', proxy(url.parse('https://example.com/endpoint')));\n// now requests to '/api/x/y/z' are proxied to 'https://example.com/endpoint/x/y/z'\n```\n\n### Documentation:\n\n`proxyMiddleware(options)`\n\n`options` allows any options that are permitted on the [`http`](http://nodejs.org/api/http.html#http_http_request_options_callback) or [`https`](http://nodejs.org/api/https.html#https_https_request_options_callback) request options.\n\nOther options:\n- `route`: you can pass the route for connect middleware within the options, as well.\n- `via`: by default no [via header](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.45) is added. If you pass `true` for this option the local hostname will be used for the via header. You can also pass a string for this option in which case that will be used for the via header.\n- `cookieRewrite`: this option can be used to support cookies via the proxy by rewriting the cookie domain to that of the proxy server. By default cookie domains are not rewritten. The `cookieRewrite` option works as the `via` option - if you pass `true` the local hostname will be used, and if you pass a string that will be used as the rewritten cookie domain.\n\n### Usage with route:\n\n```js\nvar proxyOptions = url.parse('https://example.com/endpoint');\nproxyOptions.route = '/api';\n\nvar middleWares = [proxy(proxyOptions) /*, ...*/];\n\n// Grunt connect uses this method\nconnect(middleWares);\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/andrewrk/connect-proxy/issues"
  },
  "homepage": "https://github.com/andrewrk/connect-proxy#readme",
  "_id": "proxy-middleware@0.7.0",
  "_shasum": "b34cb956875edefbd5f9899c57acf101d980af95",
  "_resolved": "https://registry.npmjs.org/proxy-middleware/-/proxy-middleware-0.7.0.tgz",
  "_from": "https://registry.npmjs.org/proxy-middleware/-/proxy-middleware-0.7.0.tgz"
}
